//////////////////////////////moniter/////////////////////////////
class monitor extends uvm_monitor;
`uvm_component_utils(monitor)
 
uvm_analysis_port #(transaction) send;
 
function new(input string inst = "MON", uvm_component c);
super.new(inst, c);
send = new("Write", this);
endfunction
 
transaction t;
virtual au_if aif;
 
virtual function void build_phase(uvm_phase phase);
super.build_phase(phase);
t = transaction::type_id::create("TRANS");
if(!uvm_config_db #(virtual au_if)::get(this,"","aif",aif)) 
`uvm_info("MON","Unable to access uvm_config_db",UVM_NONE);
endfunction
 
virtual task run_phase(uvm_phase phase);
forever begin
#10;
t.a = aif.a;
t.b = aif.b;
t.sel = aif.sel;
t.y = aif.y;
`uvm_info("MON", $sformatf("Data send to Scoreboard sel: %0d, a : %0d , b : %0d and y : %0d", t.sel,t.a,t.b,t.y), UVM_NONE);
t.print(uvm_default_line_printer);
send.write(t);
end
endtask
endclass
 
////////////////////////////Scoreboard////////////////////////////
class scoreboard extends uvm_scoreboard;
`uvm_component_utils(scoreboard)
 
uvm_analysis_imp #(transaction,scoreboard) recv;
 
transaction data;
 
function new(input string inst = "SCO", uvm_component c);
super.new(inst, c);
recv = new("Read", this);
endfunction
 
virtual function void build_phase(uvm_phase phase);
super.build_phase(phase);
data = transaction::type_id::create("TRANS");
endfunction
 
virtual function void write(input transaction t);
data = t;
`uvm_info("SCO",$sformatf("Data rcvd from Monitor sel: %0d , a: %0d , b : %0d and y : %0d",t.sel,t.a,t.b,t.y), UVM_NONE);
data.print(uvm_default_line_printer);

if(data.sel==3'b000)
begin
if(data.y == 8'h00)
`uvm_info("SCO","Test Passed", UVM_NONE)
else
`uvm_info("SCO","Test Failed", UVM_NONE);
end

else if(data.sel==3'b001)
begin
if(data.y == data.a & data.b)
`uvm_info("SCO","Test Passed", UVM_NONE)
else
`uvm_info("SCO","Test Failed", UVM_NONE);
end


else if(data.sel==3'b010)
begin
if(data.y == data.a | data.b)
`uvm_info("SCO","Test Passed", UVM_NONE)
else
`uvm_info("SCO","Test Failed", UVM_NONE);
end

  else if(data.sel==3'b011)
begin
if(data.y == data.a ^ data.b)
`uvm_info("SCO","Test Passed", UVM_NONE)
else
`uvm_info("SCO","Test Failed", UVM_NONE);
end



if(data.sel==3'b100)
begin
  if(data.y == ~ data.a)
`uvm_info("SCO","Test Passed", UVM_NONE)
else
`uvm_info("SCO","Test Failed", UVM_NONE);
end

else if(data.sel==3'b101)
begin
if(data.y == data.a - data.b)
`uvm_info("SCO","Test Passed", UVM_NONE)
else
`uvm_info("SCO","Test Failed", UVM_NONE);
end

else if(data.sel==3'b110)
begin
if(data.y == data.a + data.b)
`uvm_info("SCO","Test Passed", UVM_NONE)
else
`uvm_info("SCO","Test Failed", UVM_NONE);
end

else if(data.sel==3'b111)
begin
if(data.y == 8'hFF)
`uvm_info("SCO","Test Passed", UVM_NONE)
else
`uvm_info("SCO","Test Failed", UVM_NONE);
end
endfunction
endclass
